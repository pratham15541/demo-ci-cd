name: Send Files to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  send_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed JS/TS files from last commit
        id: files
        run: |
          echo "=== Getting JS/TS files from last commit ==="
          
          # Get files from last commit only
          ALL_FILES=$(git show --pretty="" --name-only HEAD)
          
          # Filter only JS/TS files
          CHANGED_FILES=""
          for file in $ALL_FILES; do
            case "$file" in
              *.js|*.jsx|*.ts|*.tsx)
                if [ -f "$file" ]; then
                  CHANGED_FILES="$CHANGED_FILES $file"
                fi
                ;;
            esac
          done
          
          CHANGED_FILES=$(echo $CHANGED_FILES | xargs)
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          echo "Detected JS/TS files from last commit: '$CHANGED_FILES'"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "HAS_FILES=false" >> $GITHUB_ENV
            echo "No JS/TS files in last commit"
          else
            echo "HAS_FILES=true" >> $GITHUB_ENV
            echo "Found JS/TS files to send"
          fi

      - name: Send JS/TS files to server
        if: env.HAS_FILES == 'true'
        run: |
          echo "=== Sending JS/TS files to server ==="
          
          for file in $CHANGED_FILES; do
            echo ""
            echo "---- Processing: $file ----"
            
            if [ ! -f "$file" ]; then
              echo "File $file doesn't exist, skipping"
              continue
            fi
            
            echo "Reading file content..."
            CONTENT=$(cat "$file" | jq -Rs .) || {
              echo "Failed to read content for $file"
              continue
            }
            
            # Create JSON payload
            JSON_PAYLOAD=$(jq -n \
              --arg file_path "$file" \
              --argjson content "$CONTENT" \
              '{file_path: $file_path, content: $content}')
            
            echo "Sending to server..."
            
            HTTP_RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" -X POST \
              https://6746cc6d0539.ngrok-free.app/inputCode \
              -H "Content-Type: application/json" \
              -H "ngrok-skip-browser-warning: true" \
              -d "$JSON_PAYLOAD")
            
            HTTP_STATUS=$(echo "$HTTP_RESPONSE" | tail -n1 | cut -d: -f2)
            RESPONSE_BODY=$(echo "$HTTP_RESPONSE" | sed '$d')
            
            echo "HTTP Status: $HTTP_STATUS"
            echo "Server response: $RESPONSE_BODY"
            
            if [ "$HTTP_STATUS" = "200" ]; then
              echo "Successfully sent $file"
            else
              echo "Failed to send $file (HTTP $HTTP_STATUS)"
            fi
            
            echo "------------------------"
          done

      - name: No JS/TS files found
        if: env.HAS_FILES == 'false'
        run: |
          echo "No JavaScript/TypeScript files found in last commit"
          echo "Only .js, .jsx, .ts, .tsx files are processed"