name: Generate Tests, Run, and Commit Reports

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate_and_test:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # allow committing back to repo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Fetch JSON test spec from server
        id: fetch
        run: |
          echo "=== Fetching test JSON from server ==="
          RESPONSE=$(curl -s https://42459725c5d9.ngrok-free.app/inputCode)
          echo "SERVER_JSON<<EOF" >> $GITHUB_ENV
          echo "$RESPONSE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create test files from JSON
        env:
          SERVER_JSON: ${{ env.SERVER_JSON }}
        run: |
          echo "=== Creating test files ==="
          echo "$SERVER_JSON" > server_tests.json
          
          node <<'EOF'
          const fs = require('fs');
          const path = require('path');
          const input = fs.readFileSync('server_tests.json','utf8').trim();

          console.log("Raw server_tests.json content:\n", input);

          function createTestFiles(input, folder = 'tests') {
            let filesJson;
            if (typeof input === 'string') {
              const clean = input.replace(/^```json\s*/i, '').replace(/```$/i, '').trim();
              try {
                filesJson = JSON.parse(clean);
              } catch (err) {
                console.error('❌ Failed to parse JSON. Response was probably HTML.\n', err.message);
                process.exit(1);
              }
            } else {
              console.error('❌ Invalid input format');
              process.exit(1);
            }

            if (!fs.existsSync(folder)) {
              fs.mkdirSync(folder, { recursive: true });
              console.log('Created folder:', folder);
            }

            for (const [filename, content] of Object.entries(filesJson)) {
              const filePath = path.join(folder, path.basename(filename));
              fs.writeFileSync(filePath, content, 'utf8');
              console.log('✅ Created/Updated file:', filePath);
            }
          }

          createTestFiles(input);
          EOF

      - name: Run tests and generate JSON report
        run: |
          echo "=== Running tests ==="
          mkdir -p test-reports
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H-%M-%SZ")
          REPORT="test-reports/test-report-$TIMESTAMP.json"
          npx jest --json --outputFile=$REPORT || true
          echo "Generated report: $REPORT"

      - name: Commit test files and reports
        run: |
          echo "=== Committing generated tests and report ==="
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add tests/ test-reports/
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Add generated tests and test report [skip ci]"
            git push
          fi
